    Para resolver el problema con el nuevo archivo brindado, lo primero que se prueba es como funciona el algoritmo
creado para la primera instancia en éste caso. El resultado que se obtiene para el costo total es de 634. Sabiendo
que éste algoritmo seguramente no sea la mejor solución al nuevo problema, se analizaran distintas opciones para obtener
mejores resultados.

Actualización:
    Al intentar cargar el archivo, se indico un error de asignación invalida "Asignación inválida, ver 1 y 5 --> 1". Se revisa
entonces el algoritmo para encontrar el problema.
    Lo que se encontro es que, al indicarse una incompatibilidad en el archivo, faltaba cargarla en ambos sentidos (en el caso
de error sería tanto cargar 5 como incompatible de 1, como 1 como incompatible de 5). Al ejecutar el algoritmo nuevamente
se obtuvo una mejoría, pasando el costo total a 583.

Actualización:
    En lugar de ordenar las prendas por cantidad de incompatibilidades a la hora de asignar lavados, se prueba ordenarlas
por el costo, dada la gran cantidad de prendas que se tiene en esta instancia. Se obtuvo satisfactoriamente una mejoría
bajando el costo total a 483.

Actualización:
    Como se planteo en un comienzo en el primer problema, se busco una posible solución vinculada al uso de grafos y, en
particular, de la coloración de grafos. Investigando sobre posibles algoritmos que se podrían utilizar encontre 2 opciones
intresantes:
-   Algoritmo de Welsh y Powell: lo que plantea es ordenar los vertices en base a su grado, algo bastante similar a lo
que venía utilizando.
- Algoritmo de Brelaz: además de tener en cuenta el grado de los vertices introduce el concepto de grado de saturación,
el cual mide la cantidad de colores (en terminos del problema los lavados) usados en los vecinos del mismo. Sus pasos son:
    1. Ordenar los vértices en orden decreciente de grados
    2. Asignar el primer color (lavado) al vértice de grado máximo
    3. Seleccionar otro vértice, sin colorear (lavar), con grado de saturación máximo. En caso de que fuesen varios,
    se toma el de grado máximo.
    4. Colorear (asignar lavado) al vértice del paso 3 con el color (lavado) más bajo posible
    5. Repetir con todos los vértices hasta finalizar
    Dado que como se menciono el algoritmo de Welsh y Powell es bastante similar a la solución usada hasta ahora, se modificó
la solución para seguir los pasos del algoritmo de Brelaz. Se logró obtener así un costo total de 332, mucho menor a lo
conseguido hasta el momento.

Actualización:
    En cada paso en que se seleccionan los vértices, en lugar de ordenar por el grado máximo en caso de compartir
grado de saturación se ordena por costo. Se mejoro la solución, obteniendo un costo total de 274.

Actualización:
    Para probar el efecto de variar el valor que se toma al seleccionar el peso y/o la cantidad de incompatibilidades
al seleccionar un vertice tanto al inicio como en los disintos, pasos fui modificando al valor usado dando más importancia
tanto a un término como otro, es decir, el valor usado para seleccionar es una combinación lineal entre el peso y la
cantidad de incompatibilides. Lo que en encontre es que dando la mitad de la importancia tanto al peso como la cantidad de
incompatibilades se pudo reducir en uno el costo total, lo cuál no es una gran mejoría, pero reduce el valor encontrado.